
//
// ConveyorSplineTrajectoryActionJoint
// 

loadComponent("ConveyorSplineTrajectoryActionJoint", "InternalSpaceSplineTrajectoryAction")
setActivity("ConveyorSplineTrajectoryActionJoint",0.01 ,2 ,ORO_SCHED_RT)
ConveyorSplineTrajectoryActionJoint.loadService("rosparam");
ConveyorSplineTrajectoryActionJoint.rosparam.getAll();

ConveyorSplineTrajectoryActionJoint.loadService("actionlib")
ConveyorSplineTrajectoryActionJoint.actionlib.connect("/conveyor/spline_trajectory_action_joint")

connect("ConveyorSplineTrajectoryActionJoint.trajectoryPtr","ConveyorSplineTrajectoryGeneratorJoint.trajectoryPtr", ConnPolicy())
connect("ConveyorM2J.JointPosition","ConveyorSplineTrajectoryActionJoint.JointPosition", ConnPolicy())
connect("ConveyorSplineTrajectoryGeneratorJoint.JointPositionCommand","ConveyorSplineTrajectoryActionJoint.JointPositionCommand", ConnPolicy())


ConveyorSplineTrajectoryActionJoint.configure()


//
// ConveyorSplineTrajectoryActionMotor
// 

loadComponent("ConveyorSplineTrajectoryActionMotor", "InternalSpaceSplineTrajectoryAction")
setActivity("ConveyorSplineTrajectoryActionMotor",0.01 ,2 ,ORO_SCHED_RT)
ConveyorSplineTrajectoryActionMotor.loadService("rosparam");
ConveyorSplineTrajectoryActionMotor.rosparam.getAll();
ConveyorSplineTrajectoryActionMotor.rosparam.getParam("~/ConveyorMotorParameters/upper_limits", "upper_limits")
ConveyorSplineTrajectoryActionMotor.rosparam.getParam("~/ConveyorMotorParameters/lower_limits", "lower_limits")
ConveyorSplineTrajectoryActionMotor.loadService("actionlib")
ConveyorSplineTrajectoryActionMotor.actionlib.connect("/conveyor/spline_trajectory_action_motor")

connect("ConveyorSplineTrajectoryActionMotor.trajectoryPtr","ConveyorSplineTrajectoryGeneratorMotor.trajectoryPtr", ConnPolicy())
connect("ConveyorPortDoubleAggregate_hw_p.OutputPort","ConveyorSplineTrajectoryActionMotor.JointPosition", ConnPolicy())
connect("ConveyorSplineTrajectoryGeneratorMotor.JointPositionCommand","ConveyorSplineTrajectoryActionMotor.JointPositionCommand", ConnPolicy())

ConveyorSplineTrajectoryActionMotor.configure()

loadComponent("ConveyorJntPub", "JointStatePublisher");
setActivity("ConveyorJntPub", 0.01, 2, ORO_SCHED_RT);
ConveyorJntPub.loadService("rosparam");
ConveyorJntPub.rosparam.getAll();

connect("ConveyorM2J.JointPosition", "ConveyorJntPub.JointPosition", ConnPolicy());
connect("ConveyorM2J.JointPosition", "ConveyorJntPub.JointVelocity", ConnPolicy());
connect("ConveyorM2J.JointPosition", "ConveyorJntPub.JointEffort", ConnPolicy());

stream("ConveyorJntPub.joint_state", ros.comm.topic("conveyor/joint_states"));

ConveyorJntPub.configure()


