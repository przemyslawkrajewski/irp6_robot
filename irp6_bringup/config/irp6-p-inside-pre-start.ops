

// ROS Interface

//
// Irp6pmSplineTrajectoryActionJoint
// 

loadComponent("Irp6pmSplineTrajectoryActionJoint", "InternalSpaceSplineTrajectoryAction")
setActivity("Irp6pmSplineTrajectoryActionJoint",0.01 ,2 ,ORO_SCHED_RT)
Irp6pmSplineTrajectoryActionJoint.loadService("rosparam");
Irp6pmSplineTrajectoryActionJoint.rosparam.getAll();

Irp6pmSplineTrajectoryActionJoint.loadService("actionlib")
Irp6pmSplineTrajectoryActionJoint.actionlib.connect("/irp6p_arm/spline_trajectory_action_joint")

connect("Irp6pmSplineTrajectoryActionJoint.trajectoryPtr","Irp6pmSplineTrajectoryGeneratorJoint.trajectoryPtr", ConnPolicy())
connect("Irp6pmM2J.JointPosition","Irp6pmSplineTrajectoryActionJoint.JointPosition", ConnPolicy())
connect("Irp6pmSplineTrajectoryGeneratorJoint.JointPositionCommand","Irp6pmSplineTrajectoryActionJoint.JointPositionCommand", ConnPolicy())


Irp6pmSplineTrajectoryActionJoint.configure()


//
// Irp6ptfgSplineTrajectoryActionJoint
// 

loadComponent("Irp6ptfgSplineTrajectoryActionJoint", "InternalSpaceSplineTrajectoryAction")
setActivity("Irp6ptfgSplineTrajectoryActionJoint",0.01 ,2 ,ORO_SCHED_RT)
Irp6ptfgSplineTrajectoryActionJoint.loadService("rosparam");
Irp6ptfgSplineTrajectoryActionJoint.rosparam.getAll();

Irp6ptfgSplineTrajectoryActionJoint.loadService("actionlib")
Irp6ptfgSplineTrajectoryActionJoint.actionlib.connect("/irp6p_tfg/spline_trajectory_action_joint")

connect("Irp6ptfgSplineTrajectoryActionJoint.trajectoryPtr","Irp6ptfgSplineTrajectoryGeneratorJoint.trajectoryPtr", ConnPolicy())
connect("Irp6ptfgM2J.JointPosition","Irp6ptfgSplineTrajectoryActionJoint.JointPosition", ConnPolicy())
connect("Irp6ptfgSplineTrajectoryGeneratorJoint.JointPositionCommand","Irp6ptfgSplineTrajectoryActionJoint.JointPositionCommand", ConnPolicy())


Irp6ptfgSplineTrajectoryActionJoint.configure()



//
// Irp6pmSplineTrajectoryActionMotor
// 

loadComponent("Irp6pmSplineTrajectoryActionMotor", "InternalSpaceSplineTrajectoryAction")
setActivity("Irp6pmSplineTrajectoryActionMotor",0.01 ,2 ,ORO_SCHED_RT)
Irp6pmSplineTrajectoryActionMotor.loadService("rosparam");
Irp6pmSplineTrajectoryActionMotor.rosparam.getAll();
Irp6pmSplineTrajectoryActionMotor.rosparam.getParam("~/Irp6pmMotorParameters/upper_limits", "upper_limits")
Irp6pmSplineTrajectoryActionMotor.rosparam.getParam("~/Irp6pmMotorParameters/lower_limits", "lower_limits")

Irp6pmSplineTrajectoryActionMotor.loadService("actionlib")
Irp6pmSplineTrajectoryActionMotor.actionlib.connect("/irp6p_arm/spline_trajectory_action_motor")

connect("Irp6pmSplineTrajectoryActionMotor.trajectoryPtr","Irp6pmSplineTrajectoryGeneratorMotor.trajectoryPtr", ConnPolicy())
connect("Irp6pmPortDoubleAggregate_hw_p.OutputPort","Irp6pmSplineTrajectoryActionMotor.JointPosition", ConnPolicy())
connect("Irp6pmSplineTrajectoryGeneratorMotor.JointPositionCommand","Irp6pmSplineTrajectoryActionMotor.JointPositionCommand", ConnPolicy())

Irp6pmSplineTrajectoryActionMotor.configure()


//
// Irp6ptfgSplineTrajectoryActionMotor
// 

loadComponent("Irp6ptfgSplineTrajectoryActionMotor", "InternalSpaceSplineTrajectoryAction")
setActivity("Irp6ptfgSplineTrajectoryActionMotor",0.01 ,2 ,ORO_SCHED_RT)
Irp6ptfgSplineTrajectoryActionMotor.loadService("rosparam");
Irp6ptfgSplineTrajectoryActionMotor.rosparam.getAll();
Irp6ptfgSplineTrajectoryActionMotor.rosparam.getParam("~/Irp6ptfgMotorParameters/upper_limits", "upper_limits")
Irp6ptfgSplineTrajectoryActionMotor.rosparam.getParam("~/Irp6ptfgMotorParameters/lower_limits", "lower_limits")

Irp6ptfgSplineTrajectoryActionMotor.loadService("actionlib")
Irp6ptfgSplineTrajectoryActionMotor.actionlib.connect("/irp6p_tfg/spline_trajectory_action_motor")

connect("Irp6ptfgSplineTrajectoryActionMotor.trajectoryPtr","Irp6ptfgSplineTrajectoryGeneratorMotor.trajectoryPtr", ConnPolicy())
connect("Irp6ptfgPortDoubleAggregate_hw_p.OutputPort","Irp6ptfgSplineTrajectoryActionMotor.JointPosition", ConnPolicy())
connect("Irp6ptfgSplineTrajectoryGeneratorMotor.JointPositionCommand","Irp6ptfgSplineTrajectoryActionMotor.JointPositionCommand", ConnPolicy())

Irp6ptfgSplineTrajectoryActionMotor.configure()




//
// Irp6pmPoseIntAction
//

loadComponent("Irp6pmPoseIntAction", "CartesianTrajectoryAction")
setActivity("Irp6pmPoseIntAction",0.01 ,2 ,ORO_SCHED_RT)

Irp6pmPoseIntAction.configure()

Irp6pmPoseIntAction.loadService("actionlib")
Irp6pmPoseIntAction.actionlib.connect("/irp6p_arm/pose_trajectory")

connect("Irp6pmPoseIntAction.CartesianTrajectoryCommand","Irp6pmPoseInt.CartesianTrajectoryCommand", ConnPolicy())
connect("Irp6pmForceTransformation.OutputEndEffectorWrench", "Irp6pmPoseIntAction.CartesianWrench", ConnPolicy())

stream("Irp6pmForceTransformation.OutputEndEffectorWrench", ros.comm.topic("/irp6pm_wrench"));

//
// Irp6pmToolIntAction
//

loadComponent("Irp6pmToolIntAction", "CartesianTrajectoryAction")
setActivity("Irp6pmToolIntAction",0.01 ,2 ,ORO_SCHED_RT)

Irp6pmToolIntAction.configure()

Irp6pmToolIntAction.loadService("actionlib")
Irp6pmToolIntAction.actionlib.connect("/irp6p_arm/tool_trajectory")

connect("Irp6pmToolIntAction.CartesianTrajectoryCommand","Irp6pmToolInt.CartesianTrajectoryCommand", ConnPolicy())



// joint states
loadComponent("Irp6pmJntPub", "JointStatePublisher");
setActivity("Irp6pmJntPub", 0.01, 2, ORO_SCHED_RT);
Irp6pmJntPub.loadService("rosparam");
Irp6pmJntPub.rosparam.getAll();

connect("Irp6pmM2J.JointPosition", "Irp6pmJntPub.JointPosition", ConnPolicy());
connect("Irp6pmM2J.JointPosition", "Irp6pmJntPub.JointVelocity", ConnPolicy());
connect("Irp6pmPortDoubleAggregate_hw_curr.OutputPort", "Irp6pmJntPub.JointEffort", ConnPolicy());

stream("Irp6pmJntPub.joint_state", ros.comm.topic("irp6p_arm/joint_states"));
stream("Irp6pmJntPub.joint_state", ros.comm.topic("/joint_states"));

Irp6pmJntPub.configure()



// motor states

loadComponent("Irp6pmMotPub", "JointStatePublisher");
setActivity("Irp6pmMotPub", 0.01, 2, ORO_SCHED_RT);
Irp6pmMotPub.loadService("rosparam");
Irp6pmMotPub.rosparam.getAll();

connect("Irp6pmPortDoubleAggregate_hw_p.OutputPort", "Irp6pmMotPub.JointPosition", ConnPolicy());
connect("Irp6pmPortDoubleAggregate_hw_p.OutputPort", "Irp6pmMotPub.JointVelocity", ConnPolicy());
connect("Irp6pmPortDoubleAggregate_hw_p.OutputPort", "Irp6pmMotPub.JointEffort", ConnPolicy());

stream("Irp6pmMotPub.joint_state", ros.comm.topic("irp6p_arm/motor_states"));

Irp6pmMotPub.configure()


// tfg joint state
loadComponent("Irp6ptfgJntPub", "JointStatePublisher");
setActivity("Irp6ptfgJntPub", 0.01, 2, ORO_SCHED_RT);
Irp6ptfgJntPub.loadService("rosparam");
Irp6ptfgJntPub.rosparam.getAll();

connect("Irp6ptfgM2J.JointPosition", "Irp6ptfgJntPub.JointPosition", ConnPolicy());
connect("Irp6ptfgM2J.JointPosition", "Irp6ptfgJntPub.JointVelocity", ConnPolicy());
connect("Irp6ptfgM2J.JointPosition", "Irp6ptfgJntPub.JointEffort", ConnPolicy());

stream("Irp6ptfgJntPub.joint_state", ros.comm.topic("irp6p_tfg/joint_state"));
stream("Irp6ptfgJntPub.joint_state", ros.comm.topic("/joint_states"));

Irp6ptfgJntPub.configure()




// tfg motor state

loadComponent("Irp6ptfgMotPub", "JointStatePublisher");
setActivity("Irp6ptfgMotPub", 0.01, 2, ORO_SCHED_RT);
Irp6ptfgMotPub.loadService("rosparam");
Irp6ptfgMotPub.rosparam.getAll();

connect("Irp6ptfgPortDoubleAggregate_hw_p.OutputPort", "Irp6ptfgMotPub.JointPosition", ConnPolicy());
connect("Irp6ptfgPortDoubleAggregate_hw_p.OutputPort", "Irp6ptfgMotPub.JointVelocity", ConnPolicy());
connect("Irp6ptfgPortDoubleAggregate_hw_p.OutputPort", "Irp6ptfgMotPub.JointEffort", ConnPolicy());

stream("Irp6ptfgMotPub.joint_state", ros.comm.topic("/irp6p_tfg/motor_state"));

Irp6ptfgMotPub.configure()


// Irp6pWrenchPublisher


loadComponent("Irp6pWrenchPublisher", "WrenchPublisher");
setActivity("Irp6pWrenchPublisher", 0.01, 2, ORO_SCHED_RT);
Irp6pWrenchPublisher.loadService("rosparam");
Irp6pWrenchPublisher.rosparam.getAll();


connect("Irp6pmForceTransformation.OutputEndEffectorWrench", "Irp6pWrenchPublisher.InputWrench", ConnPolicy())

stream("Irp6pWrenchPublisher.OutputWrenchStamped", ros.comm.topic("/irp6p_arm/wrist_wrench"));

Irp6pWrenchPublisher.configure()


// Irp6pTfPublisher


loadComponent("Irp6pTfPublisher", "TfPublisher");
// setActivity("Irp6pTfPublisher", 0.01, 2, ORO_SCHED_RT);
setActivityOnCPU("Irp6pTfPublisher", 0.01, 1, ORO_SCHED_RT, 0)
Irp6pTfPublisher.loadService("rosparam");
Irp6pTfPublisher.rosparam.getAll();
Irp6pTfPublisher.configure()

connect("Irp6pmToolInt.CartesianPositionCommand", "Irp6pTfPublisher.In0", ConnPolicy())

stream("Irp6pTfPublisher.OutTf", ros.comm.topic("/tf"));


// cartesian position
stream("Irp6pmForwardKinematic.EndEffectorOutputPose", ros.comm.topic("/irp6p_arm/cartesian_position"))

// ati wrench
#stream("Irp6pmForceTransformation.OutputEndEffectorWrench", ros.comm.topic("/irp6p_arm/ati_wrench"))
