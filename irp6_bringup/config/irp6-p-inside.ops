//------------------------------------------------------------------------------
//-- irp6 pm and ptfg
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
//-- Controller manager
//------------------------------------------------------------------------------
loadComponent("Irp6pScheme", "conman::Scheme");
setActivity("Irp6pScheme", 0.002, 5, ORO_SCHED_RT);
Irp6pScheme.loadService("rosparam")
Irp6pScheme.rosparam.getAll()
Irp6pScheme.loadService("conman_ros")
Irp6pScheme.configure()


//------------------------------------------------------------------------------
//-- Irp6pHardwareInterface
//------------------------------------------------------------------------------
loadComponent("Irp6pHardwareInterface","HardwareInterface")
Irp6pHardwareInterface.loadService("rosparam")
Irp6pHardwareInterface.rosparam.getAll()
Irp6pHardwareInterface.configure()
stream("Irp6pHardwareInterface.DoSynchroIn", ros.comm.topic("/irp6p_hardware_interface/do_synchro_in"))

loadComponent("Irp6pDiag", "Irp6Diagnostic")
setActivity("Irp6pDiag", 0.1, 1, ORO_SCHED_RT)
Irp6pDiag.loadService("rosparam");
Irp6pDiag.rosparam.getAll();

connect("Irp6pDiag.SynchroStateIn","Irp6pHardwareInterface.IsSynchronised", ConnPolicy())
connect("Irp6pDiag.HardwaPanicIn","Irp6pHardwareInterface.IsHardwarePanic", ConnPolicy())
connect("Irp6pDiag.HardwaBusyIn","Irp6pHardwareInterface.IsHardwareBusy", ConnPolicy())
stream("Irp6pDiag.Diagnostics", ros.comm.topic("/diagnostics"));
Irp6pDiag.configure()








//
// Load IRp6pmLimitDetector components for Regulators
//

loadComponent("IRp6pmLimitDetector","LimitDetector")
IRp6pmLimitDetector.loadService("rosparam")
IRp6pmLimitDetector.rosparam.getAll()
IRp6pmLimitDetector.rosparam.getParam("~/Irp6pmMotorParameters/upper_limits", "upper_limits")
IRp6pmLimitDetector.rosparam.getParam("~/Irp6pmMotorParameters/lower_limits", "lower_limits")
IRp6pmLimitDetector.configure()

//
// Load IRp6ptfgLimitDetector components for Regulators
//

loadComponent("IRp6ptfgLimitDetector","LimitDetector")
IRp6ptfgLimitDetector.loadService("rosparam")
IRp6ptfgLimitDetector.rosparam.getAll()
IRp6ptfgLimitDetector.rosparam.getParam("~/Irp6ptfgMotorParameters/upper_limits", "upper_limits")
IRp6ptfgLimitDetector.rosparam.getParam("~/Irp6ptfgMotorParameters/lower_limits", "lower_limits")
IRp6ptfgLimitDetector.configure()


//
// Load PortDoubleSum components for Regulators
//

loadComponent("IRp6pmPortDoubleSum_0","PortDoubleSum")
IRp6pmPortDoubleSum_0.loadService("rosparam")
IRp6pmPortDoubleSum_0.rosparam.getAll()
IRp6pmPortDoubleSum_0.configure()

loadComponent("IRp6pmPortDoubleSum_1","PortDoubleSum")
IRp6pmPortDoubleSum_1.loadService("rosparam")
IRp6pmPortDoubleSum_1.rosparam.getAll()
IRp6pmPortDoubleSum_1.configure()

loadComponent("IRp6pmPortDoubleSum_2","PortDoubleSum")
IRp6pmPortDoubleSum_2.loadService("rosparam")
IRp6pmPortDoubleSum_2.rosparam.getAll()
IRp6pmPortDoubleSum_2.configure()

loadComponent("IRp6pmPortDoubleSum_3","PortDoubleSum")
IRp6pmPortDoubleSum_3.loadService("rosparam")
IRp6pmPortDoubleSum_3.rosparam.getAll()
IRp6pmPortDoubleSum_3.configure()

loadComponent("IRp6pmPortDoubleSum_4","PortDoubleSum")
IRp6pmPortDoubleSum_4.loadService("rosparam")
IRp6pmPortDoubleSum_4.rosparam.getAll()
IRp6pmPortDoubleSum_4.configure()

loadComponent("IRp6pmPortDoubleSum_5","PortDoubleSum")
IRp6pmPortDoubleSum_5.loadService("rosparam")
IRp6pmPortDoubleSum_5.rosparam.getAll()
IRp6pmPortDoubleSum_5.configure()

loadComponent("Irp6ptfgPortDoubleSum","PortDoubleSum")
Irp6ptfgPortDoubleSum.loadService("rosparam")
Irp6ptfgPortDoubleSum.rosparam.getAll()
Irp6ptfgPortDoubleSum.configure()



//
// Load Motors Regulators
//

loadComponent("IRp6pmRegulator_0","IRp6Regulator")
IRp6pmRegulator_0.loadService("rosparam")
IRp6pmRegulator_0.rosparam.getAll()
IRp6pmRegulator_0.configure()

loadComponent("IRp6pmRegulator_1","IRp6Regulator")
IRp6pmRegulator_1.loadService("rosparam")
IRp6pmRegulator_1.rosparam.getAll()
IRp6pmRegulator_1.configure()

loadComponent("IRp6pmRegulator_2","IRp6Regulator")
IRp6pmRegulator_2.loadService("rosparam")
IRp6pmRegulator_2.rosparam.getAll()
IRp6pmRegulator_2.configure()

loadComponent("IRp6pmRegulator_3","IRp6Regulator")
IRp6pmRegulator_3.loadService("rosparam")
IRp6pmRegulator_3.rosparam.getAll()
IRp6pmRegulator_3.configure()

loadComponent("IRp6pmRegulator_4","IRp6Regulator")
IRp6pmRegulator_4.loadService("rosparam")
IRp6pmRegulator_4.rosparam.getAll()
IRp6pmRegulator_4.configure()

loadComponent("IRp6pmRegulator_5","IRp6Regulator")
IRp6pmRegulator_5.loadService("rosparam")
IRp6pmRegulator_5.rosparam.getAll()
IRp6pmRegulator_5.configure()

loadComponent("Irp6ptfgRegulator","IRp6Regulator")
Irp6ptfgRegulator.loadService("rosparam")
Irp6ptfgRegulator.rosparam.getAll()
Irp6ptfgRegulator.configure()


// Irp6pm double port spliter

loadComponent("Irp6pmPortDoubleSplit_hw_cp","PortDoubleSplit")
Irp6pmPortDoubleSplit_hw_cp.loadService("rosparam")
Irp6pmPortDoubleSplit_hw_cp.rosparam.getAll()
Irp6pmPortDoubleSplit_hw_cp.configure()

// Irp6ptfg double port spliter

loadComponent("Irp6ptfgPortDoubleSplit_hw_cp","PortDoubleSplit")
Irp6ptfgPortDoubleSplit_hw_cp.loadService("rosparam")
Irp6ptfgPortDoubleSplit_hw_cp.rosparam.getAll()
Irp6ptfgPortDoubleSplit_hw_cp.configure()



// Irp6pm double port aggregate

loadComponent("Irp6pmPortDoubleAggregate_hw_p","PortDoubleAggregate")
Irp6pmPortDoubleAggregate_hw_p.loadService("rosparam")
Irp6pmPortDoubleAggregate_hw_p.rosparam.getAll()
Irp6pmPortDoubleAggregate_hw_p.configure()

// Irp6ptfg double port aggregate

loadComponent("Irp6ptfgPortDoubleAggregate_hw_p","PortDoubleAggregate")
Irp6ptfgPortDoubleAggregate_hw_p.loadService("rosparam")
Irp6ptfgPortDoubleAggregate_hw_p.rosparam.getAll()
Irp6ptfgPortDoubleAggregate_hw_p.configure()



// Irp6pm double port aggregate

loadComponent("Irp6pmPortDoubleAggregate_hw_curr","PortDoubleAggregate")
Irp6pmPortDoubleAggregate_hw_curr.loadService("rosparam")
Irp6pmPortDoubleAggregate_hw_curr.rosparam.getAll()
Irp6pmPortDoubleAggregate_hw_curr.configure()


// Irp6pm double to float64 converter

loadComponent("PortDoubleToFloat64_1","PortDoubleToFloat64")
PortDoubleToFloat64_1.configure()
stream("PortDoubleToFloat64_1.OutputPort", ros.comm.topic("/debug"));


loadComponent("Irp6pmM2J","Irp6pmM2J")
Irp6pmM2J.loadService("rosparam")
Irp6pmM2J.rosparam.getAll()
Irp6pmM2J.rosparam.getParam("~/Irp6pmMotorParameters/synchro_motor_position", "synchro_motor_position")
Irp6pmM2J.configure()

loadComponent("Irp6ptfgM2J","Irp6tfgM2J")
Irp6ptfgM2J.configure()


loadComponent("Irp6pmForwardKinematic","Irp6pmForwardKinematic")
Irp6pmForwardKinematic.configure()

connect("Irp6pmM2J.JointPosition","Irp6pmForwardKinematic.JointPosition", ConnPolicy())

loadComponent("Irp6pmInverseKinematic","Irp6pmInverseKinematic")
Irp6pmInverseKinematic.configure()

connect("Irp6pmM2J.JointPosition","Irp6pmInverseKinematic.CurrentJointPosition", ConnPolicy())

loadComponent("Irp6pmJ2M","Irp6pmJ2M")
Irp6pmJ2M.loadService("rosparam")
Irp6pmJ2M.rosparam.getAll()
Irp6pmJ2M.rosparam.getParam("~/Irp6pmMotorParameters/synchro_motor_position", "synchro_motor_position")
Irp6pmJ2M.configure()

loadComponent("Irp6ptfgJ2M","Irp6tfgJ2M")
Irp6ptfgJ2M.configure()



connect("Irp6pmJ2M.JointPosition","Irp6pmInverseKinematic.OutputJointPosition", ConnPolicy())


// Irp6pmSplineTrajectoryGeneratorJoint

loadComponent("Irp6pmSplineTrajectoryGeneratorJoint", "InternalSpaceSplineTrajectoryGenerator")

Irp6pmSplineTrajectoryGeneratorJoint.loadService("rosparam");
Irp6pmSplineTrajectoryGeneratorJoint.rosparam.getAll();


connect("Irp6pmM2J.JointPosition","Irp6pmSplineTrajectoryGeneratorJoint.JointPosition", ConnPolicy())
connect("Irp6pmSplineTrajectoryGeneratorJoint.JointPositionCommand","Irp6pmJ2M.JointPosition", ConnPolicy())
connect("Irp6pmSplineTrajectoryGeneratorJoint.IsSynchronisedIn","Irp6pHardwareInterface.IsSynchronised", ConnPolicy())
connect("Irp6pmSplineTrajectoryGeneratorJoint.GeneratorActiveOut","Irp6pHardwareInterface.GeneratorActiveIn", ConnPolicy())
Irp6pmSplineTrajectoryGeneratorJoint.configure()


// Irp6ptfgSplineTrajectoryGeneratorJoint

loadComponent("Irp6ptfgSplineTrajectoryGeneratorJoint", "InternalSpaceSplineTrajectoryGenerator")

Irp6ptfgSplineTrajectoryGeneratorJoint.loadService("rosparam");
Irp6ptfgSplineTrajectoryGeneratorJoint.rosparam.getAll();


connect("Irp6ptfgM2J.JointPosition","Irp6ptfgSplineTrajectoryGeneratorJoint.JointPosition", ConnPolicy())
connect("Irp6ptfgSplineTrajectoryGeneratorJoint.JointPositionCommand","Irp6ptfgJ2M.JointPosition", ConnPolicy())
connect("Irp6ptfgSplineTrajectoryGeneratorJoint.IsSynchronisedIn","Irp6pHardwareInterface.IsSynchronised", ConnPolicy())
connect("Irp6ptfgSplineTrajectoryGeneratorJoint.GeneratorActiveOut","Irp6pHardwareInterface.GeneratorActiveIn", ConnPolicy())
Irp6ptfgSplineTrajectoryGeneratorJoint.configure()




// Irp6pmSplineTrajectoryGeneratorMotor


loadComponent("Irp6pmSplineTrajectoryGeneratorMotor", "InternalSpaceSplineTrajectoryGenerator")

Irp6pmSplineTrajectoryGeneratorMotor.loadService("rosparam");
Irp6pmSplineTrajectoryGeneratorMotor.rosparam.getAll();

connect("IRp6pmLimitDetector.OutputPort","Irp6pmPortDoubleSplit_hw_cp.InputPort", ConnPolicy())


connect("Irp6pmPortDoubleAggregate_hw_p.OutputPort","Irp6pmSplineTrajectoryGeneratorMotor.JointPosition", ConnPolicy())
connect("Irp6pmSplineTrajectoryGeneratorMotor.JointPositionCommand","IRp6pmLimitDetector.InputPort", ConnPolicy())
connect("Irp6pmSplineTrajectoryGeneratorMotor.IsSynchronisedIn","Irp6pHardwareInterface.IsSynchronised", ConnPolicy())
connect("Irp6pmSplineTrajectoryGeneratorMotor.GeneratorActiveOut","Irp6pHardwareInterface.GeneratorActiveIn", ConnPolicy())
Irp6pmSplineTrajectoryGeneratorMotor.configure()

// Irp6ptfgSplineTrajectoryGeneratorMotor

 loadComponent("Irp6ptfgSplineTrajectoryGeneratorMotor", "InternalSpaceSplineTrajectoryGenerator")

Irp6ptfgSplineTrajectoryGeneratorMotor.loadService("rosparam");
Irp6ptfgSplineTrajectoryGeneratorMotor.rosparam.getAll();

connect("IRp6ptfgLimitDetector.OutputPort","Irp6ptfgPortDoubleSplit_hw_cp.InputPort", ConnPolicy())

connect("Irp6ptfgPortDoubleAggregate_hw_p.OutputPort","Irp6ptfgSplineTrajectoryGeneratorMotor.JointPosition", ConnPolicy())
connect("Irp6ptfgSplineTrajectoryGeneratorMotor.JointPositionCommand","IRp6ptfgLimitDetector.InputPort", ConnPolicy())
connect("Irp6ptfgSplineTrajectoryGeneratorMotor.IsSynchronisedIn","Irp6pHardwareInterface.IsSynchronised", ConnPolicy())
connect("Irp6ptfgSplineTrajectoryGeneratorMotor.GeneratorActiveOut","Irp6pHardwareInterface.GeneratorActiveIn", ConnPolicy())
Irp6ptfgSplineTrajectoryGeneratorMotor.configure()


// Irp6pmPoseInt

loadComponent("Irp6pmPoseInt", "CartesianInterpolator")

connect("Irp6pmForwardKinematic.EndEffectorOutputPose", "Irp6pmPoseInt.CartesianPosition", ConnPolicy())
connect("Irp6pmPoseInt.CartesianPositionCommand", "Irp6pmInverseKinematic.InputEndEffectorPose", ConnPolicy())
connect("Irp6pmPoseInt.IsSynchronisedIn","Irp6pHardwareInterface.IsSynchronised", ConnPolicy())
connect("Irp6pmPoseInt.GeneratorActiveOut","Irp6pHardwareInterface.GeneratorActiveIn", ConnPolicy())

Irp6pmPoseInt.configure();

// Irp6pmToolInt

loadComponent("Irp6pmToolInt", "CartesianInterpolator")
Irp6pmToolInt.configure();
Irp6pmToolInt.loadService("rosparam");
Irp6pmToolInt.rosparam.getAll();

connect("Irp6pmToolInt.CartesianPositionCommand", "Irp6pmForwardKinematic.Tool", ConnPolicy())
connect("Irp6pmToolInt.CartesianPositionCommand", "Irp6pmInverseKinematic.Tool", ConnPolicy())

#stream("Irp6pmToolInt.CartesianPositionCommand", ros.comm.topic("/irp6p_arm/tool"))




// ATI6284

loadComponent("ATI6284", "ATI6284")
setActivity("ATI6284", 0.001, 5, ORO_SCHED_RT)
ATI6284.loadService("rosparam")
ATI6284.rosparam.getAll()
ATI6284.configure()


// Irp6pmForceTransformation
loadComponent("Irp6pmForceTransformation", "ForceTransformation")
Irp6pmForceTransformation.loadService("rosparam");
Irp6pmForceTransformation.rosparam.getAll();
Irp6pmForceTransformation.configure()


connect("Irp6pmForceTransformation.CurrentWristPose", "Irp6pmForwardKinematic.WristOutputPose", ConnPolicy())
connect("Irp6pmForceTransformation.CurrentSensorSlowFilteredWrench", "ATI6284.OutputSlowFilteredWrench", ConnPolicy())
connect("Irp6pmForceTransformation.CurrentSensorFastFilteredWrench", "ATI6284.OutputFastFilteredWrench", ConnPolicy())
connect("Irp6pmForceTransformation.Tool", "Irp6pmToolInt.CartesianPositionCommand", ConnPolicy())

stream("Irp6pmForceTransformation.ToolGravityParam", ros.comm.topic("/irp6p_arm/tg_param"))

// ForceControlLaw

loadComponent("Irp6pmForceControlLaw", "ForceControlLaw")
Irp6pmForceControlLaw.configure()

connect("Irp6pmForceControlLaw.OutputEndEffectorPose", "Irp6pmInverseKinematic.InputEndEffectorPose", ConnPolicy())
connect("Irp6pmForceControlLaw.CurrentEndEffectorPose", "Irp6pmForwardKinematic.EndEffectorOutputPose", ConnPolicy())
connect("Irp6pmForceTransformation.OutputEndEffectorWrench", "Irp6pmForceControlLaw.CurrentEndEffectorWrench", ConnPolicy())
connect("Irp6pmForceControlLaw.IsSynchronisedIn","Irp6pHardwareInterface.IsSynchronised", ConnPolicy())
connect("Irp6pmForceControlLaw.GeneratorActiveOut","Irp6pHardwareInterface.GeneratorActiveIn", ConnPolicy())

stream("Irp6pmForceControlLaw.CurrentFclParam", ros.comm.topic("/irp6p_arm/fcl_param"))




## Connect
connect("IRp6pmPortDoubleSum_0.InputPort_0","IRp6pmRegulator_0.computedPwm_out", ConnPolicy())
connect("Irp6pHardwareInterface.computedReg_in_irp6pm_0","IRp6pmPortDoubleSum_0.OutputPort", ConnPolicy())
connect("IRp6pmRegulator_0.DesiredPosition","Irp6pHardwareInterface.DesiredPosition_out_irp6pm_0", ConnPolicy())
connect("IRp6pmRegulator_0.deltaInc_in","Irp6pHardwareInterface.MotorIncrement_irp6pm_0", ConnPolicy())
connect("IRp6pmRegulator_0.SynchroStateIn","Irp6pHardwareInterface.IsSynchronised", ConnPolicy())
connect("IRp6pmRegulator_0.EmergencyStopOut","Irp6pHardwareInterface.EmergencyStopIn", ConnPolicy())


connect("IRp6pmPortDoubleSum_1.InputPort_0","IRp6pmRegulator_1.computedPwm_out", ConnPolicy())
connect("Irp6pHardwareInterface.computedReg_in_irp6pm_1","IRp6pmPortDoubleSum_1.OutputPort", ConnPolicy())
connect("IRp6pmRegulator_1.DesiredPosition","Irp6pHardwareInterface.DesiredPosition_out_irp6pm_1", ConnPolicy())
connect("IRp6pmRegulator_1.deltaInc_in","Irp6pHardwareInterface.MotorIncrement_irp6pm_1", ConnPolicy())
connect("IRp6pmRegulator_1.SynchroStateIn","Irp6pHardwareInterface.IsSynchronised", ConnPolicy())
connect("IRp6pmRegulator_1.EmergencyStopOut","Irp6pHardwareInterface.EmergencyStopIn", ConnPolicy())


connect("IRp6pmPortDoubleSum_2.InputPort_0","IRp6pmRegulator_2.computedPwm_out", ConnPolicy())
connect("Irp6pHardwareInterface.computedReg_in_irp6pm_2","IRp6pmPortDoubleSum_2.OutputPort", ConnPolicy())
connect("IRp6pmRegulator_2.DesiredPosition","Irp6pHardwareInterface.DesiredPosition_out_irp6pm_2", ConnPolicy())
connect("IRp6pmRegulator_2.deltaInc_in","Irp6pHardwareInterface.MotorIncrement_irp6pm_2", ConnPolicy())
connect("IRp6pmRegulator_2.SynchroStateIn","Irp6pHardwareInterface.IsSynchronised", ConnPolicy())
connect("IRp6pmRegulator_2.EmergencyStopOut","Irp6pHardwareInterface.EmergencyStopIn", ConnPolicy())


connect("IRp6pmPortDoubleSum_3.InputPort_0","IRp6pmRegulator_3.computedPwm_out", ConnPolicy())
connect("Irp6pHardwareInterface.computedReg_in_irp6pm_3","IRp6pmPortDoubleSum_3.OutputPort", ConnPolicy())
connect("IRp6pmRegulator_3.DesiredPosition","Irp6pHardwareInterface.DesiredPosition_out_irp6pm_3", ConnPolicy())
connect("IRp6pmRegulator_3.deltaInc_in","Irp6pHardwareInterface.MotorIncrement_irp6pm_3", ConnPolicy())
connect("IRp6pmRegulator_3.SynchroStateIn","Irp6pHardwareInterface.IsSynchronised", ConnPolicy())
connect("IRp6pmRegulator_3.EmergencyStopOut","Irp6pHardwareInterface.EmergencyStopIn", ConnPolicy())


connect("IRp6pmPortDoubleSum_4.InputPort_0","IRp6pmRegulator_4.computedPwm_out", ConnPolicy())
connect("Irp6pHardwareInterface.computedReg_in_irp6pm_4","IRp6pmPortDoubleSum_4.OutputPort", ConnPolicy())
connect("IRp6pmRegulator_4.DesiredPosition","Irp6pHardwareInterface.DesiredPosition_out_irp6pm_4", ConnPolicy())
connect("IRp6pmRegulator_4.deltaInc_in","Irp6pHardwareInterface.MotorIncrement_irp6pm_4", ConnPolicy())
connect("IRp6pmRegulator_4.SynchroStateIn","Irp6pHardwareInterface.IsSynchronised", ConnPolicy())
connect("IRp6pmRegulator_4.EmergencyStopOut","Irp6pHardwareInterface.EmergencyStopIn", ConnPolicy())


connect("IRp6pmPortDoubleSum_5.InputPort_0","IRp6pmRegulator_5.computedPwm_out", ConnPolicy())
connect("Irp6pHardwareInterface.computedReg_in_irp6pm_5","IRp6pmPortDoubleSum_5.OutputPort", ConnPolicy())
connect("IRp6pmRegulator_5.DesiredPosition","Irp6pHardwareInterface.DesiredPosition_out_irp6pm_5", ConnPolicy())
connect("IRp6pmRegulator_5.deltaInc_in","Irp6pHardwareInterface.MotorIncrement_irp6pm_5", ConnPolicy())
connect("IRp6pmRegulator_5.SynchroStateIn","Irp6pHardwareInterface.IsSynchronised", ConnPolicy())
connect("IRp6pmRegulator_5.EmergencyStopOut","Irp6pHardwareInterface.EmergencyStopIn", ConnPolicy())

connect("PortDoubleToFloat64_1.InputPort","Irp6pHardwareInterface.MotorIncrement_irp6pm_5", ConnPolicy())


connect("Irp6ptfgPortDoubleSum.InputPort_0","Irp6ptfgRegulator.computedPwm_out", ConnPolicy())
connect("Irp6pHardwareInterface.computedReg_in_irp6ptfg","Irp6ptfgPortDoubleSum.OutputPort", ConnPolicy())
connect("Irp6ptfgRegulator.DesiredPosition","Irp6pHardwareInterface.DesiredPosition_out_irp6ptfg", ConnPolicy())
connect("Irp6ptfgRegulator.deltaInc_in","Irp6pHardwareInterface.MotorIncrement_irp6ptfg", ConnPolicy())
connect("Irp6ptfgRegulator.SynchroStateIn","Irp6pHardwareInterface.IsSynchronised", ConnPolicy())
connect("Irp6ptfgRegulator.EmergencyStopOut","Irp6pHardwareInterface.EmergencyStopIn", ConnPolicy())



connect("Irp6pmPortDoubleAggregate_hw_p.OutputPort","Irp6pmM2J.MotorPosition", ConnPolicy())
connect("Irp6pmJ2M.MotorPosition", "IRp6pmLimitDetector.InputPort", ConnPolicy())

connect("Irp6ptfgPortDoubleAggregate_hw_p.OutputPort","Irp6ptfgM2J.MotorPosition", ConnPolicy())
connect("Irp6ptfgJ2M.MotorPosition", "IRp6ptfgLimitDetector.InputPort", ConnPolicy())

connect("Irp6pmPortDoubleSplit_hw_cp.OutputPort_0","Irp6pHardwareInterface.MotorPositionCommand_irp6pm_0", ConnPolicy())
connect("Irp6pmPortDoubleSplit_hw_cp.OutputPort_1","Irp6pHardwareInterface.MotorPositionCommand_irp6pm_1", ConnPolicy())
connect("Irp6pmPortDoubleSplit_hw_cp.OutputPort_2","Irp6pHardwareInterface.MotorPositionCommand_irp6pm_2", ConnPolicy())
connect("Irp6pmPortDoubleSplit_hw_cp.OutputPort_3","Irp6pHardwareInterface.MotorPositionCommand_irp6pm_3", ConnPolicy())
connect("Irp6pmPortDoubleSplit_hw_cp.OutputPort_4","Irp6pHardwareInterface.MotorPositionCommand_irp6pm_4", ConnPolicy())
connect("Irp6pmPortDoubleSplit_hw_cp.OutputPort_5","Irp6pHardwareInterface.MotorPositionCommand_irp6pm_5", ConnPolicy())

connect("Irp6ptfgPortDoubleSplit_hw_cp.OutputPort_0","Irp6pHardwareInterface.MotorPositionCommand_irp6ptfg", ConnPolicy())

connect("Irp6pmPortDoubleSplit_hw_cp.OutputPort_0","IRp6pmRegulator_0.DesiredPosition", ConnPolicy())
connect("Irp6pmPortDoubleSplit_hw_cp.OutputPort_1","IRp6pmRegulator_1.DesiredPosition", ConnPolicy())
connect("Irp6pmPortDoubleSplit_hw_cp.OutputPort_2","IRp6pmRegulator_2.DesiredPosition", ConnPolicy())
connect("Irp6pmPortDoubleSplit_hw_cp.OutputPort_3","IRp6pmRegulator_3.DesiredPosition", ConnPolicy())
connect("Irp6pmPortDoubleSplit_hw_cp.OutputPort_4","IRp6pmRegulator_4.DesiredPosition", ConnPolicy())
connect("Irp6pmPortDoubleSplit_hw_cp.OutputPort_5","IRp6pmRegulator_5.DesiredPosition", ConnPolicy())

connect("Irp6ptfgPortDoubleSplit_hw_cp.OutputPort_0","Irp6ptfgRegulator.DesiredPosition", ConnPolicy())



connect("Irp6pmPortDoubleAggregate_hw_p.InputPort_0","Irp6pHardwareInterface.MotorPosition_irp6pm_0", ConnPolicy())
connect("Irp6pmPortDoubleAggregate_hw_p.InputPort_1","Irp6pHardwareInterface.MotorPosition_irp6pm_1", ConnPolicy())
connect("Irp6pmPortDoubleAggregate_hw_p.InputPort_2","Irp6pHardwareInterface.MotorPosition_irp6pm_2", ConnPolicy())
connect("Irp6pmPortDoubleAggregate_hw_p.InputPort_3","Irp6pHardwareInterface.MotorPosition_irp6pm_3", ConnPolicy())
connect("Irp6pmPortDoubleAggregate_hw_p.InputPort_4","Irp6pHardwareInterface.MotorPosition_irp6pm_4", ConnPolicy())
connect("Irp6pmPortDoubleAggregate_hw_p.InputPort_5","Irp6pHardwareInterface.MotorPosition_irp6pm_5", ConnPolicy())


connect("Irp6ptfgPortDoubleAggregate_hw_p.InputPort_0","Irp6pHardwareInterface.MotorPosition_irp6ptfg", ConnPolicy())

connect("Irp6pmPortDoubleAggregate_hw_curr.InputPort_0","Irp6pHardwareInterface.MotorCurrent_irp6pm_0", ConnPolicy())
connect("Irp6pmPortDoubleAggregate_hw_curr.InputPort_1","Irp6pHardwareInterface.MotorCurrent_irp6pm_1", ConnPolicy())
connect("Irp6pmPortDoubleAggregate_hw_curr.InputPort_2","Irp6pHardwareInterface.MotorCurrent_irp6pm_2", ConnPolicy())
connect("Irp6pmPortDoubleAggregate_hw_curr.InputPort_3","Irp6pHardwareInterface.MotorCurrent_irp6pm_3", ConnPolicy())
connect("Irp6pmPortDoubleAggregate_hw_curr.InputPort_4","Irp6pHardwareInterface.MotorCurrent_irp6pm_4", ConnPolicy())
connect("Irp6pmPortDoubleAggregate_hw_curr.InputPort_5","Irp6pHardwareInterface.MotorCurrent_irp6pm_5", ConnPolicy())







addPeer("Irp6pScheme", "Irp6pHardwareInterface");
addPeer("Irp6pScheme", "PortDoubleToFloat64_1");



//
//  Add PortDoubleSum as Irp6pScheme peers
//

addPeer("Irp6pScheme", "IRp6pmPortDoubleSum_0")
addPeer("Irp6pScheme", "IRp6pmPortDoubleSum_1")
addPeer("Irp6pScheme", "IRp6pmPortDoubleSum_2")
addPeer("Irp6pScheme", "IRp6pmPortDoubleSum_3")
addPeer("Irp6pScheme", "IRp6pmPortDoubleSum_4")
addPeer("Irp6pScheme", "IRp6pmPortDoubleSum_5")

addPeer("Irp6pScheme", "Irp6ptfgPortDoubleSum")

//
//  Add regulators as Irp6pScheme peers
//



addPeer("Irp6pScheme", "IRp6pmRegulator_0");
addPeer("Irp6pScheme", "IRp6pmRegulator_1");
addPeer("Irp6pScheme", "IRp6pmRegulator_2");
addPeer("Irp6pScheme", "IRp6pmRegulator_3");
addPeer("Irp6pScheme", "IRp6pmRegulator_4");
addPeer("Irp6pScheme", "IRp6pmRegulator_5");

addPeer("Irp6pScheme", "Irp6ptfgRegulator");




addPeer("Irp6pScheme", "Irp6pmPortDoubleSplit_hw_cp")
addPeer("Irp6pScheme", "IRp6pmLimitDetector")
addPeer("Irp6pScheme", "Irp6ptfgPortDoubleSplit_hw_cp")
addPeer("Irp6pScheme", "IRp6ptfgLimitDetector")
addPeer("Irp6pScheme", "Irp6pmPortDoubleAggregate_hw_p")
addPeer("Irp6pScheme", "Irp6ptfgPortDoubleAggregate_hw_p")
addPeer("Irp6pScheme", "Irp6pmPortDoubleAggregate_hw_curr")
addPeer("Irp6pScheme", "Irp6pmM2J");
addPeer("Irp6pScheme", "Irp6ptfgM2J");
addPeer("Irp6pScheme", "Irp6pmForwardKinematic");
addPeer("Irp6pScheme", "Irp6pmInverseKinematic");
addPeer("Irp6pScheme", "Irp6pmJ2M");
addPeer("Irp6pScheme", "Irp6ptfgJ2M");
addPeer("Irp6pScheme", "Irp6pmForceTransformation");
addPeer("Irp6pScheme", "Irp6pmForceControlLaw");

addPeer("Irp6pScheme", "Irp6pmSplineTrajectoryGeneratorJoint");
addPeer("Irp6pScheme", "Irp6ptfgSplineTrajectoryGeneratorJoint");
addPeer("Irp6pScheme", "Irp6pmSplineTrajectoryGeneratorMotor");
addPeer("Irp6pScheme", "Irp6ptfgSplineTrajectoryGeneratorMotor");
addPeer("Irp6pScheme", "Irp6pmPoseInt");
addPeer("Irp6pScheme", "Irp6pmToolInt")

Irp6pScheme.addBlock("Irp6pHardwareInterface");
Irp6pScheme.addBlock("PortDoubleToFloat64_1");



//
//  Add PortDoubleSum as Irp6pScheme blocks
//


Irp6pScheme.addBlock("IRp6pmPortDoubleSum_0")
Irp6pScheme.addBlock("IRp6pmPortDoubleSum_1")
Irp6pScheme.addBlock("IRp6pmPortDoubleSum_2")
Irp6pScheme.addBlock("IRp6pmPortDoubleSum_3")
Irp6pScheme.addBlock("IRp6pmPortDoubleSum_4")
Irp6pScheme.addBlock("IRp6pmPortDoubleSum_5")

Irp6pScheme.addBlock("Irp6ptfgPortDoubleSum")


//
//  Add regulators as Irp6pScheme blocks
//


Irp6pScheme.addBlock("IRp6pmRegulator_0")
Irp6pScheme.addBlock("IRp6pmRegulator_1")
Irp6pScheme.addBlock("IRp6pmRegulator_2")
Irp6pScheme.addBlock("IRp6pmRegulator_3")
Irp6pScheme.addBlock("IRp6pmRegulator_4")
Irp6pScheme.addBlock("IRp6pmRegulator_5")

Irp6pScheme.addBlock("Irp6ptfgRegulator")

Irp6pScheme.latchConnections("Irp6pHardwareInterface", "IRp6pmRegulator_0", true);
Irp6pScheme.latchConnections("Irp6pHardwareInterface", "IRp6pmRegulator_1", true);
Irp6pScheme.latchConnections("Irp6pHardwareInterface", "IRp6pmRegulator_2", true);
Irp6pScheme.latchConnections("Irp6pHardwareInterface", "IRp6pmRegulator_3", true);
Irp6pScheme.latchConnections("Irp6pHardwareInterface", "IRp6pmRegulator_4", true);
Irp6pScheme.latchConnections("Irp6pHardwareInterface", "IRp6pmRegulator_5", true);

Irp6pScheme.latchConnections("Irp6pHardwareInterface", "Irp6ptfgRegulator", true);


Irp6pScheme.addBlock("Irp6pmPortDoubleSplit_hw_cp")
Irp6pScheme.addBlock("IRp6pmLimitDetector")
Irp6pScheme.addBlock("Irp6ptfgPortDoubleSplit_hw_cp")
Irp6pScheme.addBlock("IRp6ptfgLimitDetector")
Irp6pScheme.addBlock("Irp6pmPortDoubleAggregate_hw_p")
Irp6pScheme.addBlock("Irp6ptfgPortDoubleAggregate_hw_p")
Irp6pScheme.addBlock("Irp6pmPortDoubleAggregate_hw_curr")
Irp6pScheme.addBlock("Irp6pmM2J");
Irp6pScheme.addBlock("Irp6ptfgM2J");
Irp6pScheme.addBlock("Irp6pmForwardKinematic");
Irp6pScheme.addBlock("Irp6pmInverseKinematic");
Irp6pScheme.latchConnections("Irp6pHardwareInterface", "Irp6pmPortDoubleAggregate_hw_p", true);
Irp6pScheme.latchConnections("Irp6pHardwareInterface", "Irp6ptfgPortDoubleAggregate_hw_p", true);
Irp6pScheme.addBlock("Irp6pmJ2M");
Irp6pScheme.addBlock("Irp6ptfgJ2M");
Irp6pScheme.addBlock("Irp6pmForceControlLaw");
Irp6pScheme.latchConnections("Irp6pHardwareInterface", "Irp6pmForceControlLaw", true);
Irp6pScheme.addBlock("Irp6pmForceTransformation");
Irp6pScheme.addBlock("Irp6pmSplineTrajectoryGeneratorJoint");
Irp6pScheme.addBlock("Irp6ptfgSplineTrajectoryGeneratorJoint");
Irp6pScheme.addBlock("Irp6pmSplineTrajectoryGeneratorMotor");
Irp6pScheme.addBlock("Irp6ptfgSplineTrajectoryGeneratorMotor");
Irp6pScheme.latchConnections("Irp6pHardwareInterface", "Irp6pmSplineTrajectoryGeneratorJoint", true);
Irp6pScheme.latchConnections("Irp6pHardwareInterface", "Irp6ptfgSplineTrajectoryGeneratorJoint", true);
Irp6pScheme.latchConnections("Irp6pHardwareInterface", "Irp6pmSplineTrajectoryGeneratorMotor", true);
Irp6pScheme.latchConnections("Irp6pHardwareInterface", "Irp6ptfgSplineTrajectoryGeneratorMotor", true);
Irp6pScheme.addBlock("Irp6pmPoseInt");
Irp6pScheme.latchConnections("Irp6pHardwareInterface", "Irp6pmPoseInt", true);
Irp6pScheme.addBlock("Irp6pmToolInt");



// ROS Interface

//
// Irp6pmSplineTrajectoryActionJoint
// 

loadComponent("Irp6pmSplineTrajectoryActionJoint", "InternalSpaceSplineTrajectoryAction")
setActivity("Irp6pmSplineTrajectoryActionJoint",0.01 ,2 ,ORO_SCHED_RT)
Irp6pmSplineTrajectoryActionJoint.loadService("rosparam");
Irp6pmSplineTrajectoryActionJoint.rosparam.getAll();

Irp6pmSplineTrajectoryActionJoint.loadService("actionlib")
Irp6pmSplineTrajectoryActionJoint.actionlib.connect("/irp6p_arm/spline_trajectory_action_joint")

connect("Irp6pmSplineTrajectoryActionJoint.trajectoryPtr","Irp6pmSplineTrajectoryGeneratorJoint.trajectoryPtr", ConnPolicy())
connect("Irp6pmM2J.JointPosition","Irp6pmSplineTrajectoryActionJoint.JointPosition", ConnPolicy())
connect("Irp6pmSplineTrajectoryGeneratorJoint.JointPositionCommand","Irp6pmSplineTrajectoryActionJoint.JointPositionCommand", ConnPolicy())


Irp6pmSplineTrajectoryActionJoint.configure()


//
// Irp6ptfgSplineTrajectoryActionJoint
// 

loadComponent("Irp6ptfgSplineTrajectoryActionJoint", "InternalSpaceSplineTrajectoryAction")
setActivity("Irp6ptfgSplineTrajectoryActionJoint",0.01 ,2 ,ORO_SCHED_RT)
Irp6ptfgSplineTrajectoryActionJoint.loadService("rosparam");
Irp6ptfgSplineTrajectoryActionJoint.rosparam.getAll();

Irp6ptfgSplineTrajectoryActionJoint.loadService("actionlib")
Irp6ptfgSplineTrajectoryActionJoint.actionlib.connect("/irp6p_tfg/spline_trajectory_action_joint")

connect("Irp6ptfgSplineTrajectoryActionJoint.trajectoryPtr","Irp6ptfgSplineTrajectoryGeneratorJoint.trajectoryPtr", ConnPolicy())
connect("Irp6ptfgM2J.JointPosition","Irp6ptfgSplineTrajectoryActionJoint.JointPosition", ConnPolicy())
connect("Irp6ptfgSplineTrajectoryGeneratorJoint.JointPositionCommand","Irp6ptfgSplineTrajectoryActionJoint.JointPositionCommand", ConnPolicy())


Irp6ptfgSplineTrajectoryActionJoint.configure()



//
// Irp6pmSplineTrajectoryActionMotor
// 

loadComponent("Irp6pmSplineTrajectoryActionMotor", "InternalSpaceSplineTrajectoryAction")
setActivity("Irp6pmSplineTrajectoryActionMotor",0.01 ,2 ,ORO_SCHED_RT)
Irp6pmSplineTrajectoryActionMotor.loadService("rosparam");
Irp6pmSplineTrajectoryActionMotor.rosparam.getAll();
Irp6pmSplineTrajectoryActionMotor.rosparam.getParam("~/Irp6pmMotorParameters/upper_limits", "upper_limits")
Irp6pmSplineTrajectoryActionMotor.rosparam.getParam("~/Irp6pmMotorParameters/lower_limits", "lower_limits")

Irp6pmSplineTrajectoryActionMotor.loadService("actionlib")
Irp6pmSplineTrajectoryActionMotor.actionlib.connect("/irp6p_arm/spline_trajectory_action_motor")

connect("Irp6pmSplineTrajectoryActionMotor.trajectoryPtr","Irp6pmSplineTrajectoryGeneratorMotor.trajectoryPtr", ConnPolicy())
connect("Irp6pmPortDoubleAggregate_hw_p.OutputPort","Irp6pmSplineTrajectoryActionMotor.JointPosition", ConnPolicy())
connect("Irp6pmSplineTrajectoryGeneratorMotor.JointPositionCommand","Irp6pmSplineTrajectoryActionMotor.JointPositionCommand", ConnPolicy())

Irp6pmSplineTrajectoryActionMotor.configure()


//
// Irp6ptfgSplineTrajectoryActionMotor
// 

loadComponent("Irp6ptfgSplineTrajectoryActionMotor", "InternalSpaceSplineTrajectoryAction")
setActivity("Irp6ptfgSplineTrajectoryActionMotor",0.01 ,2 ,ORO_SCHED_RT)
Irp6ptfgSplineTrajectoryActionMotor.loadService("rosparam");
Irp6ptfgSplineTrajectoryActionMotor.rosparam.getAll();
Irp6ptfgSplineTrajectoryActionMotor.rosparam.getParam("~/Irp6ptfgMotorParameters/upper_limits", "upper_limits")
Irp6ptfgSplineTrajectoryActionMotor.rosparam.getParam("~/Irp6ptfgMotorParameters/lower_limits", "lower_limits")

Irp6ptfgSplineTrajectoryActionMotor.loadService("actionlib")
Irp6ptfgSplineTrajectoryActionMotor.actionlib.connect("/irp6p_tfg/spline_trajectory_action_motor")

connect("Irp6ptfgSplineTrajectoryActionMotor.trajectoryPtr","Irp6ptfgSplineTrajectoryGeneratorMotor.trajectoryPtr", ConnPolicy())
connect("Irp6ptfgPortDoubleAggregate_hw_p.OutputPort","Irp6ptfgSplineTrajectoryActionMotor.JointPosition", ConnPolicy())
connect("Irp6ptfgSplineTrajectoryGeneratorMotor.JointPositionCommand","Irp6ptfgSplineTrajectoryActionMotor.JointPositionCommand", ConnPolicy())

Irp6ptfgSplineTrajectoryActionMotor.configure()




//
// Irp6pmPoseIntAction
//

loadComponent("Irp6pmPoseIntAction", "CartesianTrajectoryAction")
setActivity("Irp6pmPoseIntAction",0.01 ,2 ,ORO_SCHED_RT)

Irp6pmPoseIntAction.configure()

Irp6pmPoseIntAction.loadService("actionlib")
Irp6pmPoseIntAction.actionlib.connect("/irp6p_arm/pose_trajectory")

connect("Irp6pmPoseIntAction.CartesianTrajectoryCommand","Irp6pmPoseInt.CartesianTrajectoryCommand", ConnPolicy())
connect("Irp6pmForceTransformation.OutputEndEffectorWrench", "Irp6pmPoseIntAction.CartesianWrench", ConnPolicy())

stream("Irp6pmForceTransformation.OutputEndEffectorWrench", ros.comm.topic("/irp6pm_wrench"));

//
// Irp6pmToolIntAction
//

loadComponent("Irp6pmToolIntAction", "CartesianTrajectoryAction")
setActivity("Irp6pmToolIntAction",0.01 ,2 ,ORO_SCHED_RT)

Irp6pmToolIntAction.configure()

Irp6pmToolIntAction.loadService("actionlib")
Irp6pmToolIntAction.actionlib.connect("/irp6p_arm/tool_trajectory")

connect("Irp6pmToolIntAction.CartesianTrajectoryCommand","Irp6pmToolInt.CartesianTrajectoryCommand", ConnPolicy())



// joint states
loadComponent("Irp6pmJntPub", "JointStatePublisher");
setActivity("Irp6pmJntPub", 0.01, 2, ORO_SCHED_RT);
Irp6pmJntPub.loadService("rosparam");
Irp6pmJntPub.rosparam.getAll();

connect("Irp6pmM2J.JointPosition", "Irp6pmJntPub.JointPosition", ConnPolicy());
connect("Irp6pmM2J.JointPosition", "Irp6pmJntPub.JointVelocity", ConnPolicy());
connect("Irp6pmPortDoubleAggregate_hw_curr.OutputPort", "Irp6pmJntPub.JointEffort", ConnPolicy());

stream("Irp6pmJntPub.joint_state", ros.comm.topic("irp6p_arm/joint_states"));
stream("Irp6pmJntPub.joint_state", ros.comm.topic("/joint_states"));

Irp6pmJntPub.configure()



// motor states

loadComponent("Irp6pmMotPub", "JointStatePublisher");
setActivity("Irp6pmMotPub", 0.01, 2, ORO_SCHED_RT);
Irp6pmMotPub.loadService("rosparam");
Irp6pmMotPub.rosparam.getAll();

connect("Irp6pmPortDoubleAggregate_hw_p.OutputPort", "Irp6pmMotPub.JointPosition", ConnPolicy());
connect("Irp6pmPortDoubleAggregate_hw_p.OutputPort", "Irp6pmMotPub.JointVelocity", ConnPolicy());
connect("Irp6pmPortDoubleAggregate_hw_p.OutputPort", "Irp6pmMotPub.JointEffort", ConnPolicy());

stream("Irp6pmMotPub.joint_state", ros.comm.topic("irp6p_arm/motor_states"));

Irp6pmMotPub.configure()


// tfg joint state
loadComponent("Irp6ptfgJntPub", "JointStatePublisher");
setActivity("Irp6ptfgJntPub", 0.01, 2, ORO_SCHED_RT);
Irp6ptfgJntPub.loadService("rosparam");
Irp6ptfgJntPub.rosparam.getAll();

connect("Irp6ptfgM2J.JointPosition", "Irp6ptfgJntPub.JointPosition", ConnPolicy());
connect("Irp6ptfgM2J.JointPosition", "Irp6ptfgJntPub.JointVelocity", ConnPolicy());
connect("Irp6ptfgM2J.JointPosition", "Irp6ptfgJntPub.JointEffort", ConnPolicy());

stream("Irp6ptfgJntPub.joint_state", ros.comm.topic("irp6p_tfg/joint_state"));
stream("Irp6ptfgJntPub.joint_state", ros.comm.topic("/joint_states"));

Irp6ptfgJntPub.configure()




// tfg motor state

loadComponent("Irp6ptfgMotPub", "JointStatePublisher");
setActivity("Irp6ptfgMotPub", 0.01, 2, ORO_SCHED_RT);
Irp6ptfgMotPub.loadService("rosparam");
Irp6ptfgMotPub.rosparam.getAll();

connect("Irp6ptfgPortDoubleAggregate_hw_p.OutputPort", "Irp6ptfgMotPub.JointPosition", ConnPolicy());
connect("Irp6ptfgPortDoubleAggregate_hw_p.OutputPort", "Irp6ptfgMotPub.JointVelocity", ConnPolicy());
connect("Irp6ptfgPortDoubleAggregate_hw_p.OutputPort", "Irp6ptfgMotPub.JointEffort", ConnPolicy());

stream("Irp6ptfgMotPub.joint_state", ros.comm.topic("/irp6p_tfg/motor_state"));

Irp6ptfgMotPub.configure()


// Irp6pWrenchPublisher


loadComponent("Irp6pWrenchPublisher", "WrenchPublisher");
setActivity("Irp6pWrenchPublisher", 0.01, 2, ORO_SCHED_RT);
Irp6pWrenchPublisher.loadService("rosparam");
Irp6pWrenchPublisher.rosparam.getAll();


connect("Irp6pmForceTransformation.OutputEndEffectorWrench", "Irp6pWrenchPublisher.InputWrench", ConnPolicy())

stream("Irp6pWrenchPublisher.OutputWrenchStamped", ros.comm.topic("/irp6p_arm/wrist_wrench"));

Irp6pWrenchPublisher.configure()


// Irp6pTfPublisher


loadComponent("Irp6pTfPublisher", "TfPublisher");
// setActivity("Irp6pTfPublisher", 0.01, 2, ORO_SCHED_RT);
setActivityOnCPU("Irp6pTfPublisher", 0.01, 1, ORO_SCHED_RT, 0)
Irp6pTfPublisher.loadService("rosparam");
Irp6pTfPublisher.rosparam.getAll();
Irp6pTfPublisher.configure()

connect("Irp6pmToolInt.CartesianPositionCommand", "Irp6pTfPublisher.In0", ConnPolicy())

stream("Irp6pTfPublisher.OutTf", ros.comm.topic("/tf"));


// cartesian position
stream("Irp6pmForwardKinematic.EndEffectorOutputPose", ros.comm.topic("/irp6p_arm/cartesian_position"))

// ati wrench
#stream("Irp6pmForceTransformation.OutputEndEffectorWrench", ros.comm.topic("/irp6p_arm/ati_wrench"))


## Start it
Irp6pScheme.start()
//
//  Start Port Double sums for regulators
//


IRp6pmPortDoubleSum_0.start()
IRp6pmPortDoubleSum_1.start()
IRp6pmPortDoubleSum_2.start()
IRp6pmPortDoubleSum_3.start()
IRp6pmPortDoubleSum_4.start()
IRp6pmPortDoubleSum_5.start()
Irp6ptfgPortDoubleSum.start()

//
//  Start regulators
//


IRp6pmRegulator_0.start()
IRp6pmRegulator_1.start()
IRp6pmRegulator_2.start()
IRp6pmRegulator_3.start()
IRp6pmRegulator_4.start()
IRp6pmRegulator_5.start()
Irp6ptfgRegulator.start()
Irp6pmPortDoubleSplit_hw_cp.start()
IRp6pmLimitDetector.start()
Irp6ptfgPortDoubleSplit_hw_cp.start()
IRp6ptfgLimitDetector.start()
Irp6pmPortDoubleAggregate_hw_p.start()
Irp6ptfgPortDoubleAggregate_hw_p.start()
Irp6pmPortDoubleAggregate_hw_curr.start()
Irp6pmM2J.start()
Irp6ptfgM2J.start()
Irp6pmForwardKinematic.start()
Irp6pmInverseKinematic.start()
Irp6pmJ2M.start()
Irp6ptfgJ2M.start()
ATI6284.start()
Irp6pmJntPub.start()
Irp6pmMotPub.start()
Irp6ptfgJntPub.start()
Irp6ptfgMotPub.start()
Irp6pWrenchPublisher.start()
Irp6pTfPublisher.start()
Irp6pmSplineTrajectoryActionJoint.start()
Irp6ptfgSplineTrajectoryActionJoint.start()
Irp6pmSplineTrajectoryActionMotor.start()
Irp6ptfgSplineTrajectoryActionMotor.start()
Irp6pmPoseIntAction.start()
Irp6pmToolIntAction.start()
Irp6pmToolInt.start()


Irp6pHardwareInterface.start()
Irp6pDiag.start()


