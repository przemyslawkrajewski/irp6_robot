
//
//  Add PortDoubleSum as Irp6scheme peers
//

addPeer("Irp6scheme", "IRp6pmPortDoubleSum_0")
addPeer("Irp6scheme", "IRp6pmPortDoubleSum_1")
addPeer("Irp6scheme", "IRp6pmPortDoubleSum_2")
addPeer("Irp6scheme", "IRp6pmPortDoubleSum_3")
addPeer("Irp6scheme", "IRp6pmPortDoubleSum_4")
addPeer("Irp6scheme", "IRp6pmPortDoubleSum_5")

addPeer("Irp6scheme", "Irp6ptfgPortDoubleSum")

//
//  Add regulators as Irp6scheme peers
//



addPeer("Irp6scheme", "IRp6pmRegulator_0");
addPeer("Irp6scheme", "IRp6pmRegulator_1");
addPeer("Irp6scheme", "IRp6pmRegulator_2");
addPeer("Irp6scheme", "IRp6pmRegulator_3");
addPeer("Irp6scheme", "IRp6pmRegulator_4");
addPeer("Irp6scheme", "IRp6pmRegulator_5");

addPeer("Irp6scheme", "Irp6ptfgRegulator");




addPeer("Irp6scheme", "Irp6pmPortDoubleSplit_hw_cp")
addPeer("Irp6scheme", "IRp6pmLimitDetector")
addPeer("Irp6scheme", "Irp6ptfgPortDoubleSplit_hw_cp")
addPeer("Irp6scheme", "IRp6ptfgLimitDetector")
addPeer("Irp6scheme", "Irp6pmPortDoubleAggregate_hw_p")
addPeer("Irp6scheme", "Irp6ptfgPortDoubleAggregate_hw_p")
addPeer("Irp6scheme", "Irp6pmPortDoubleAggregate_hw_curr")
addPeer("Irp6scheme", "Irp6pmM2J");
addPeer("Irp6scheme", "Irp6ptfgM2J");
addPeer("Irp6scheme", "Irp6pmForwardKinematic");
addPeer("Irp6scheme", "Irp6pmInverseKinematic");
addPeer("Irp6scheme", "Irp6pmJ2M");
addPeer("Irp6scheme", "Irp6ptfgJ2M");
addPeer("Irp6scheme", "Irp6pmForceTransformation");
addPeer("Irp6scheme", "Irp6pmForceControlLaw");

addPeer("Irp6scheme", "Irp6pmSplineTrajectoryGeneratorJoint");
addPeer("Irp6scheme", "Irp6ptfgSplineTrajectoryGeneratorJoint");
addPeer("Irp6scheme", "Irp6pmSplineTrajectoryGeneratorMotor");
addPeer("Irp6scheme", "Irp6ptfgSplineTrajectoryGeneratorMotor");
addPeer("Irp6scheme", "Irp6pmPoseInt");
addPeer("Irp6scheme", "Irp6pmToolInt")